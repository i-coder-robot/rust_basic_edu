fn main() {
    /*
        || 代替 ()将输入参数括起来
        函数体界定符是{},对于单个表达式是可选的，其他情况必须加上。
        有能力捕获外部环境的变量。

        |参数列表|{
           业务逻辑
        }

        ||{
            业务逻辑
        }
        闭包可以赋值一个变量。
    */

    let double = |x| {x*2};
    let add =|a,b|{a+b};
    let x = add(2,4);
    println!("{}",x);

    let y = double(5);
    println!("{}",y);

    let v= 3 ;
    let add2=|x|{v+x};
    println!("{}",add2(4));

    /*
        捕获
        闭包，可以在没有标注的情况下运行。可移动(move)，可借用(borrow)，闭包可以通过
        引用 &T
        可变引用 &mut T
        值 T

        总结闭包

        闭包是在一个函数内创建立即调用的另外一个函数。
        闭包是一个匿名函数
        闭包虽然没有函数名，但可以把整个闭包赋值一个变量，通过该变量来完成闭包的调用
        闭包不用声明返回值，但可以有返回值。并且使用最后一条语句的执行结果作为返回值，闭包的返回值也可以给变量。
        闭包也称之为内联函数。可以让闭包访问外层函数里的变量。
    */
}
